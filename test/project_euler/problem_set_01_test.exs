defmodule ProblemSet01Tests do
  use ExUnit.Case
  require Integer
  import ProjectEuler

  @moduledoc """
  Project Euler Tests
  """

  @doc """
  If we list all the natural numbers below 10 that are multiples of 3 or 5, 
  we get 3, 5, 6 and 9. The sum of these multiples is 23.

  Find the sum of all the multiples of 3 or 5 below 1000. 
  """
  test "Problem 1: Multiple of 3 and 5: " do
    mult? = fn n -> rem(n, 3) == 0 or rem(n, 5) == 0 end

    1..999
    |> Enum.filter(mult?)
    |> Enum.sum()
    |> IO.inspect(label: "Problem 1")
  end

  @doc """
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
  By starting with 1 and 2, the first 10 terms will be:

      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed 
  four million, find the sum of the even-valued terms.
  """
  test "Problem 2: Even Fibonacci numbers: " do
    fib_stream = ProjectEuler.fib_stream()

    fib_stream
    |> Stream.filter(&Integer.is_even/1)
    |> Enum.take_while(&(&1 < 4_000_000))
    |> Enum.sum()
    |> IO.inspect(label: "Problem 2")
  end

  @doc """
  The prime factors of 13195 are 5, 7, 13 and 29.

  What is the largest prime factor of the number 600851475143 ?
  """
  test "Problem 3: Largest prime factor:" do
    # 600_851_475_143
    num = 600_851_475_143

    # res = factors(num)
    # IO.inspect(res, label: "Problem 3")
  end
end