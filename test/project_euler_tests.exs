defmodule ProjectEulerTests do
  use ExUnit.Case

  @moduledoc """
  Project Euler Tests
  """

  @doc """
  If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

  Find the sum of all the multiples of 3 or 5 below 1000. 
  """
  test "Problem 1: Multiple of 3 and 5: " do
    mult? = fn n -> rem(n, 3) == 0 or rem(n, 5) == 0 end

    1..999
    |> Enum.filter(mult?)
    |> Enum.sum()
    |> IO.inspect(label: "Problem 1")
  end

  @doc """
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  """
  test "Problem 2: Even Fibonacci numbers: " do
    fib = fn {a, b} -> {a, {b, a + b}} end

    Stream.unfold({1, 1}, fib)
    |> Stream.filter(fn n -> rem(n, 2) == 0 end)
    |> Enum.take_while(fn n -> n < 4_000_000 end)
    |> Enum.sum()
    |> IO.inspect(label: "Problem 2")
  end
end